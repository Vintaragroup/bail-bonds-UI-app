# Dockerfile.web - build and serve SPA via Nginx

# 1) Build stage
FROM node:20-alpine AS build
WORKDIR /app
COPY package.json package-lock.json ./
# React 19 + some libs (e.g., @stripe/react-stripe-js) may have peer range mismatches.
# Use legacy-peer-deps to proceed deterministically with lockfile.
RUN npm ci --legacy-peer-deps
COPY . .

# Expose Vite build-time env vars via build args. Compose will pass these from host env.
ARG VITE_API_URL
ARG VITE_FIREBASE_API_KEY
ARG VITE_FIREBASE_AUTH_DOMAIN
ARG VITE_FIREBASE_PROJECT_ID
ARG VITE_FIREBASE_APP_ID
ARG VITE_FIREBASE_MEASUREMENT_ID

# Make them available to `npm run build` as environment variables.
ENV VITE_API_URL=$VITE_API_URL \
	VITE_FIREBASE_API_KEY=$VITE_FIREBASE_API_KEY \
	VITE_FIREBASE_AUTH_DOMAIN=$VITE_FIREBASE_AUTH_DOMAIN \
	VITE_FIREBASE_PROJECT_ID=$VITE_FIREBASE_PROJECT_ID \
	VITE_FIREBASE_APP_ID=$VITE_FIREBASE_APP_ID \
	VITE_FIREBASE_MEASUREMENT_ID=$VITE_FIREBASE_MEASUREMENT_ID

RUN npm run build

# 2) Runtime stage (Nginx)
FROM nginx:alpine AS runtime
WORKDIR /usr/share/nginx/html
COPY --from=build /app/dist .
# Basic Nginx config to support SPA routing; API assumed at /api on separate host or reverse proxy
RUN rm -rf /etc/nginx/conf.d/*
COPY nginx/default.conf /etc/nginx/conf.d/default.conf
EXPOSE 80
CMD ["nginx", "-g", "daemon off;"]
